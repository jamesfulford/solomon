version: '3.4'

networks:
  solomon:
    name: solomon

services:

  solomon:
    image: 383314943195.dkr.ecr.us-east-1.amazonaws.com/solomon:${TAG:-latest}
    restart: always
    networks:
      - solomon
    healthcheck:
      test: ["CMD", "python3", "health.py"]
      interval: 1m
      timeout: 3s
      retries: 3
      start_period: 0s
    secrets:
      - db-username
      - db-password
      - db-host
      - db-port
      - db-name
      - django-secret-key
      - configcat-key
  # Migrations need to be applied outside of compose, unfortunately.
  # For continuous uptime, that means our code needs to support records pre- and post- migration.
  
  solomon-ui:
    image: 383314943195.dkr.ecr.us-east-1.amazonaws.com/solomon-ui:${TAG:-latest}
    restart: always
    networks:
      - solomon
    healthcheck:
      test: curl -f http://localhost/api/ping || exit 1
      interval: 1m
      timeout: 3s
      retries: 3
      start_period: 0s
    depends_on:
      solomon:
        condition: service_healthy
    ports:
      - 80:80

secrets:
  django-secret-key:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:django-secret-key-i8IaHO"
  
  # in prod, we might not use our own container for mysql, instead using Aurora or something
  db-name:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:db-name-Am5t7x"
  db-username:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:db-username-7LkWbk"
  db-password:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:db-password-9l7uvI"
  db-host:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:db-host-kQqeJI"
  db-port:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:db-port-b2TcyA"

  configcat-key:
    external: true
    name: "arn:aws:secretsmanager:us-east-1:383314943195:secret:configcat-key-uESw6H"
